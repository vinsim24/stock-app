version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: stock-app-redis
    ports:
      - "6379:6379"
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    networks:
      - stock-app-network
    volumes:
      - redis-data:/data

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: stock-app-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - stock-app-network
    volumes:
      - ./backend:/app

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: stock-app-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - stock-app-network
    volumes:
      - ./frontend:/usr/share/nginx/html:ro

  frontend-react:
    build:
      context: ./frontend-react
      dockerfile: Dockerfile
    container_name: stock-app-frontend-react
    ports:
      - "3002:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - stock-app-network
    volumes:
      - ./frontend-react:/usr/share/nginx/html:ro

  nginx:
      image: nginx:1.29-alpine
      container_name: stock-app-nginx
      ports:
        - "10080:80"
      depends_on:
        - frontend
        - frontend-react
      restart: unless-stopped
      networks:
        - stock-app-network
      volumes:
        - ./nginx.conf:/etc/nginx/nginx.conf:ro

networks:
  stock-app-network:
    driver: bridge

volumes:
  redis-data:
